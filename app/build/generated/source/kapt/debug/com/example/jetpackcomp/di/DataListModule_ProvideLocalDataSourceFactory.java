// Generated by Dagger (https://dagger.dev).
package com.example.jetpackcomp.di;

import com.example.jetpackcomp.data.datasource.popularmovies.LocalDataList;
import com.example.jetpackcomp.model.room.JPDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataListModule_ProvideLocalDataSourceFactory implements Factory<LocalDataList> {
  private final Provider<JPDatabase> dbProvider;

  public DataListModule_ProvideLocalDataSourceFactory(Provider<JPDatabase> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public LocalDataList get() {
    return provideLocalDataSource(dbProvider.get());
  }

  public static DataListModule_ProvideLocalDataSourceFactory create(
      Provider<JPDatabase> dbProvider) {
    return new DataListModule_ProvideLocalDataSourceFactory(dbProvider);
  }

  public static LocalDataList provideLocalDataSource(JPDatabase db) {
    return Preconditions.checkNotNullFromProvides(DataListModule.INSTANCE.provideLocalDataSource(db));
  }
}

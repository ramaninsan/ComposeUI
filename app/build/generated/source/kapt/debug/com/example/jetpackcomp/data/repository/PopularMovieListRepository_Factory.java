// Generated by Dagger (https://dagger.dev).
package com.example.jetpackcomp.data.repository;

import com.example.jetpackcomp.data.datasource.popularmovies.LocalDataList;
import com.example.jetpackcomp.data.datasource.popularmovies.RemoteDataList;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PopularMovieListRepository_Factory implements Factory<PopularMovieListRepository> {
  private final Provider<RemoteDataList> remoteSourceProvider;

  private final Provider<LocalDataList> localSourceProvider;

  public PopularMovieListRepository_Factory(Provider<RemoteDataList> remoteSourceProvider,
      Provider<LocalDataList> localSourceProvider) {
    this.remoteSourceProvider = remoteSourceProvider;
    this.localSourceProvider = localSourceProvider;
  }

  @Override
  public PopularMovieListRepository get() {
    return newInstance(remoteSourceProvider.get(), localSourceProvider.get());
  }

  public static PopularMovieListRepository_Factory create(
      Provider<RemoteDataList> remoteSourceProvider, Provider<LocalDataList> localSourceProvider) {
    return new PopularMovieListRepository_Factory(remoteSourceProvider, localSourceProvider);
  }

  public static PopularMovieListRepository newInstance(RemoteDataList remoteSource,
      LocalDataList localSource) {
    return new PopularMovieListRepository(remoteSource, localSource);
  }
}

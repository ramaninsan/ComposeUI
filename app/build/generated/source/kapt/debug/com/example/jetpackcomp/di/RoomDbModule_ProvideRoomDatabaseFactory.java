// Generated by Dagger (https://dagger.dev).
package com.example.jetpackcomp.di;

import android.content.Context;
import com.example.jetpackcomp.model.room.JPDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RoomDbModule_ProvideRoomDatabaseFactory implements Factory<JPDatabase> {
  private final Provider<Context> contextProvider;

  public RoomDbModule_ProvideRoomDatabaseFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public JPDatabase get() {
    return provideRoomDatabase(contextProvider.get());
  }

  public static RoomDbModule_ProvideRoomDatabaseFactory create(Provider<Context> contextProvider) {
    return new RoomDbModule_ProvideRoomDatabaseFactory(contextProvider);
  }

  public static JPDatabase provideRoomDatabase(Context context) {
    return Preconditions.checkNotNullFromProvides(RoomDbModule.INSTANCE.provideRoomDatabase(context));
  }
}
